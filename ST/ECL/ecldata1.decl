
sub Sub0()
{
    ins_97(0);
    ins_103(28.0f, 28.0f, 32.0f);
    ins_100(769);
    ins_45(1.5707964f, 2.0f);
!L    ins_78();
    ins_67(0, 6, 1, 1, 3.0f, 0.0f, 0.0f, 0.0f, 4);
    ins_79();
    ins_77(120);
+40: //40
!*    ins_46(-0.024543693f);
+80: //120
    ins_46(0.019634955f);
+100: //220
    ins_46(0.0f);
+9780: //10000
    ins_1(0);
}

sub Sub1()
{
    ins_97(0);
    ins_103(28.0f, 28.0f, 32.0f);
    ins_100(769);
    ins_45(1.5707964f, 2.0f);
!L    ins_78();
    ins_67(0, 6, 1, 1, 3.0f, 0.0f, 0.0f, 0.0f, 4);
    ins_79();
    ins_77(120);
+100: //100
!*    ins_46(0.019634955f);
+100: //200
    ins_46(0.0f);
+9800: //10000
    ins_1(0);
}

sub Sub2()
{
    ins_97(3);
    ins_103(28.0f, 28.0f, 32.0f);
    ins_81(12.0f, -12.0f, 0.0f);
    ins_100(768);
    ins_45(1.5707964f, 2.0f);
+60: //60
    ins_97(5);
    ins_47(0.0f);
+10: //70
!E    ins_67(1, 2, 3, 1, 1.4f, 0.0f, 0.0f, 0.7853982f, 3);
!N    ins_67(1, 2, 7, 1, 1.4f, 0.0f, 0.0f, 0.62831855f, 3);
!H    ins_67(1, 2, 9, 2, 1.4f, 0.5f, 0.0f, 0.3926991f, 3);
!L    ins_67(1, 2, 11, 2, 1.4f, 0.5f, 0.0f, 0.15707964f, 3);
+60: //130
!*    ins_48(0.05f);
    ins_46(0.05235988f);
+60: //190
    ins_46(0.0f);
+9810: //10000
    ins_1(0);
}

sub Sub3()
{
    ins_97(3);
    ins_103(28.0f, 28.0f, 32.0f);
    ins_81(12.0f, -12.0f, 0.0f);
    ins_100(768);
    ins_45(1.5707964f, 2.0f);
+60: //60
    ins_97(5);
    ins_47(0.0f);
+10: //70
!L    ins_67(1, 2, 5, 1, 1.4f, 0.0f, 0.0f, 0.2617994f, 3);
+60: //130
!*    ins_48(0.05f);
    ins_46(0.05235988f);
+60: //190
    ins_46(0.0f);
+9810: //10000
    ins_1(0);
}

sub Sub4()
{
    ins_5(-10008, 0.02f);
    ins_82(-1, -1, -1, -1, 0.02f, -999.0f, -1.0f, -1.0f);
!E    ins_70(0, -10001, 8, 1, 0.0f, 0.0f, -10005.0f, 0.0f, 21);
!N    ins_70(0, -10001, 14, 1, 0.0f, 0.0f, -10005.0f, 0.0f, 21);
!H    ins_70(0, -10001, 20, 1, 0.0f, 0.0f, -10005.0f, 0.0f, 21);
!L    ins_70(0, -10001, 28, 1, 0.0f, 0.0f, -10005.0f, 0.0f, 21);
!*    ins_106(9);
    ins_36();
}

sub Sub5()
{
    ins_8(-10006, 3.0f);
    ins_20(-10006, -10006.0f, 0.5f);
    ins_8(-10005, 6.2831855f);
    ins_21(-10005, -10005.0f, 3.1415927f);
!E    ins_70(0, -10001, 4, 1, -10006.0f, 0.7f, -10005.0f, 0.0f, 5);
!N    ins_70(0, -10001, 8, 1, -10006.0f, 0.7f, -10005.0f, 0.0f, 5);
!H    ins_70(0, -10001, 12, 1, -10006.0f, 0.7f, -10005.0f, 0.0f, 5);
!L    ins_70(0, -10001, 24, 1, -10006.0f, 0.7f, -10005.0f, 0.0f, 5);
!*    ins_8(-10006, 3.0f);
    ins_20(-10006, -10006.0f, 0.5f);
    ins_8(-10005, 6.2831855f);
    ins_21(-10005, -10005.0f, 3.1415927f);
!E    ins_70(2, -10001, 4, 1, -10006.0f, 0.7f, -10005.0f, 0.0f, 5);
!N    ins_70(2, -10001, 8, 1, -10006.0f, 0.7f, -10005.0f, 0.0f, 5);
!H    ins_70(2, -10001, 12, 1, -10006.0f, 0.7f, -10005.0f, 0.0f, 5);
!L    ins_70(2, -10001, 24, 1, -10006.0f, 0.7f, -10005.0f, 0.0f, 5);
!*    ins_106(9);
    ins_36();
}

sub Sub6()
{
    ins_47(0.0f);
    ins_94();
    ins_106(18);
    ins_76(0);
    ins_119(5);
    ins_66();
    ins_104(0);
    ins_105(0);
    ins_97(128);
+40: //40
    ins_59(120, 192.0f, -64.0f, 0.0f);
+120: //160
    ins_1(0);
}

sub Sub7()
{
    ins_47(0.0f);
    ins_94();
    ins_76(0);
    ins_66();
    ins_97(128);
    ins_59(60, 192.0f, -64.0f, 0.0f);
+60: //60
    ins_1(0);
}

sub Sub8()
{
    ins_105(0);
    ins_107(1);
    ins_104(0);
    ins_108("Sub6");
    ins_101(0);
    ins_98(128, 131, 132, 129, 130);
    ins_100(258);
!HL    ins_113(500);
    ins_114("Sub9");
!*    ins_115(1440);
    ins_116("Sub7");
    ins_126(0);
    ins_81(0.0f, -12.0f, 0.0f);
    ins_43(192.0f, -32.0f, 0.0f);
    ins_103(48.0f, 56.0f, 32.0f);
    ins_57(60, 320.0f, 128.0f, 0.0f);
+60: //60
    ins_102(0, -0.3f, -0.7f, -0.3f, 48.0f);
    ins_105(1);
    ins_104(1);
+20: //80
    ins_102(1, -1.0f, -0.7f, -0.3f, 48.0f);
+20: //100
    ins_102(2, -0.3f, -0.7f, -0.3f, 48.0f);
+30: //130
    ins_106(6);
+30: //160
!E    ins_69(1, 6, 16, 1, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!N    ins_69(1, 6, 16, 3, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!H    ins_69(1, 6, 16, 5, 2.0f, 1.2f, 0.0f, 0.0f, 9);
!L    ins_69(1, 6, 16, 7, 2.0f, 1.0f, 0.0f, 0.0f, 9);
!*    ins_97(133);
+32: //192
    ins_106(8);
    ins_4(-10001, 3);
    ins_5(-10005, 2.0f);
    ins_4(-10009, 2);
Sub8_712:
+10: //202
    ins_57(60, 192.0f, 64.0f, 0.0f);
    ins_5(-10006, 1.7f);
+60: //262
    ins_35("Sub4", 6, 0.0f);
    ins_97(133);
+8: //270
    ins_35("Sub4", 2, 0.06544985f);
+8: //278
    ins_35("Sub4", 10, 0.1308997f);
+8: //286
    ins_35("Sub4", 13, 0.19634955f);
+8: //294
    ins_35("Sub4", 14, 0.2617994f);
+30: //324
    ins_97(134);
+60: //384
    ins_57(60, 64.0f, 96.0f, 0.0f);
+10: //394
    ins_106(6);
+20: //414
!E    ins_69(1, 10, 16, 1, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!N    ins_69(1, 10, 16, 3, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!H    ins_69(1, 10, 16, 5, 2.0f, 1.2f, 0.0f, 0.0f, 9);
!L    ins_69(1, 10, 16, 7, 2.0f, 1.0f, 0.0f, 0.0f, 9);
+30: //444
!E    ins_69(1, 13, 16, 1, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!N    ins_69(1, 13, 16, 3, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!H    ins_69(1, 13, 16, 5, 2.0f, 1.2f, 0.0f, 0.0f, 9);
!L    ins_69(1, 13, 16, 7, 2.0f, 1.0f, 0.0f, 0.0f, 9);
!*    ins_106(8);
+32: //476
    ins_106(8);
+40: //516
    ins_0();
+10: //526
    ins_57(60, 192.0f, 80.0f, 0.0f);
    ins_4(-10006, 1);
+60: //586
    ins_35("Sub5", 6, 0.0f);
    ins_97(133);
+8: //594
    ins_35("Sub5", 2, -0.06544985f);
+8: //602
    ins_35("Sub5", 10, -0.1308997f);
+8: //610
    ins_35("Sub5", 13, -0.19634955f);
+8: //618
    ins_35("Sub5", 14, -0.2617994f);
    ins_20(-10005, -10005.0f, 0.5f);
+30: //648
    ins_97(134);
+60: //708
    ins_57(60, 320.0f, 96.0f, 0.0f);
+10: //718
    ins_106(6);
+20: //738
!E    ins_69(1, 6, 16, 1, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!N    ins_69(1, 6, 16, 3, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!H    ins_69(1, 6, 16, 5, 2.0f, 1.2f, 0.0f, 0.0f, 9);
!L    ins_69(1, 6, 16, 7, 2.0f, 1.0f, 0.0f, 0.0f, 9);
+30: //768
!E    ins_69(1, 2, 16, 1, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!N    ins_69(1, 2, 16, 3, 2.0f, 1.5f, 0.0f, 0.0f, 9);
!H    ins_69(1, 2, 16, 5, 2.0f, 1.2f, 0.0f, 0.0f, 9);
!L    ins_69(1, 2, 16, 7, 2.0f, 1.0f, 0.0f, 0.0f, 9);
!*    ins_97(133);
    ins_106(8);
+32: //800
    ins_106(8);
+40: //840
    ins_0();
    ins_97(134);
    ins_20(-10005, -10005.0f, 0.5f);
    ins_3(192, Sub8_712, -10009);
+10: //850
    ins_57(60, 192.0f, -64.0f, 0.0f);
+60: //910
    ins_1(0);
}

sub Sub9()
{
    ins_93(2, 0, "月符「ムーンライトレイ」");
    ins_105(0);
    ins_65(32.0f, 48.0f, 352.0f, 144.0f);
    ins_112(0);
    ins_115(1320);
    ins_116("Sub6");
    ins_57(120, 192.0f, 96.0f, 0.0f);
+120: //120
    ins_105(1);
    ins_78();
!H    ins_69(0, 6, 42, 1, 2.5f, 0.0f, 0.0f, 0.0f, 4);
!L    ins_69(0, 6, 48, 1, 2.8f, 0.0f, 0.0f, 0.0f, 4);
!*    ins_79();
!H    ins_77(40);
!L    ins_77(25);
Sub9_330:
!*    ins_87(0);
    ins_85(0, 6, 0.3926991f, 0, 0.0f, 500.0f, 500.0f, 32.0f, 30, 120, 16, 30, 14, 0);
    ins_87(1);
    ins_85(0, 6, 2.7488935f, 0, 0.0f, 500.0f, 500.0f, 32.0f, 30, 120, 16, 30, 14, 0);
+30: //150
    ins_106(16);
    ins_4(-10009, 120);
Sub9_526:
+1: //151
    ins_88(0, 0.008267349f);
    ins_88(1, -0.008267349f);
    ins_3(150, Sub9_526, -10009);
+60: //211
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(2.0f);
    ins_61(120);
+120: //331
    ins_2(120, Sub9_330);
}

sub Sub10()
{
    ins_105(0);
    ins_104(0);
    ins_107(2);
    ins_108("Sub16");
    ins_101(0);
    ins_98(128, 131, 132, 129, 130);
    ins_100(258);
    ins_81(0.0f, -12.0f, 0.0f);
    ins_103(48.0f, 56.0f, 32.0f);
    ins_126(1);
    ins_43(320.0f, -32.0f, 0.0f);
    ins_57(60, 192.0f, 96.0f, 0.0f);
    ins_109("Sub11", 0);
+60: //60
    ins_97(133);
    ins_65(32.0f, 48.0f, 352.0f, 144.0f);
Sub10_300:
+1000: //1060
    ins_2(60, Sub10_300);
+60: //1120
    ins_1(0);
}

sub Sub11()
{
    ins_105(1);
    ins_107(2);
    ins_104(1);
    ins_108("Sub16");
    ins_100(258);
    ins_97(134);
    ins_111(7000);
    ins_112(0);
!NHL    ins_113(900);
    ins_114("Sub22");
!*    ins_115(2100);
    ins_116("Sub22");
    ins_65(32.0f, 48.0f, 352.0f, 144.0f);
    ins_102(0, -0.3f, -0.7f, -0.3f, 48.0f);
+20: //20
    ins_102(1, -1.0f, -0.7f, -0.3f, 48.0f);
+20: //40
    ins_102(2, -0.3f, -0.7f, -0.3f, 48.0f);
+60: //100
    ins_35("Sub12", 0, 0.0f);
+3000: //3100
    ins_1(0);
}

sub Sub12()
{
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(3.0f);
    ins_61(60);
+12: //12
!E    ins_67(3, 2, 1, 10, 3.0f, 1.0f, 0.0f, 0.09817477f, 4);
!N    ins_67(3, 2, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!H    ins_67(3, 2, 1, 10, 5.0f, 1.0f, 0.0f, 0.09817477f, 4);
!L    ins_67(3, 2, 1, 10, 6.0f, 1.0f, 0.0f, 0.09817477f, 4);
!*    ins_106(8);
+8: //20
!E    ins_67(3, 1, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!N    ins_67(3, 1, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!H    ins_67(3, 1, 1, 10, 5.0f, 1.0f, 0.0f, 0.09817477f, 4);
!L    ins_67(3, 1, 2, 10, 6.0f, 1.0f, 0.0f, 0.09817477f, 4);
!*    ins_106(8);
+8: //28
!E    ins_67(3, 2, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!N    ins_67(3, 2, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!H    ins_67(3, 2, 1, 10, 5.0f, 1.0f, 0.0f, 0.09817477f, 4);
!L    ins_67(3, 2, 2, 10, 6.0f, 1.0f, 0.0f, 0.09817477f, 4);
!*    ins_106(8);
+8: //36
!E    ins_67(3, 1, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!N    ins_67(3, 1, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!H    ins_67(3, 1, 1, 10, 5.0f, 1.0f, 0.0f, 0.09817477f, 4);
!L    ins_67(3, 1, 3, 10, 6.0f, 1.0f, 0.0f, 0.09817477f, 4);
!*    ins_106(8);
+8: //44
!E    ins_67(3, 2, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!N    ins_67(3, 2, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!H    ins_67(3, 2, 2, 10, 5.0f, 1.0f, 0.0f, 0.09817477f, 4);
!L    ins_67(3, 2, 3, 10, 6.0f, 1.0f, 0.0f, 0.09817477f, 4);
!*    ins_106(8);
+8: //52
!E    ins_67(3, 1, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!N    ins_67(3, 1, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!H    ins_67(3, 1, 3, 10, 5.0f, 1.0f, 0.0f, 0.09817477f, 4);
!L    ins_67(3, 1, 4, 10, 6.0f, 1.0f, 0.0f, 0.09817477f, 4);
!*    ins_106(8);
+8: //60
!E    ins_67(3, 2, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!N    ins_67(3, 2, 1, 10, 4.0f, 1.0f, 0.0f, 0.09817477f, 4);
!H    ins_67(3, 2, 4, 10, 5.0f, 1.0f, 0.0f, 0.09817477f, 4);
!L    ins_67(3, 2, 5, 10, 6.0f, 1.0f, 0.0f, 0.09817477f, 4);
!*    ins_106(8);
+120: //180
    ins_6(-10001, 3);
    ins_39("Sub13", 0, 0.0f, -10001, 0);
    ins_39("Sub14", 0, 0.0f, -10001, 1);
    ins_35("Sub15", 0, 0.0f);
}

sub Sub13()
{
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(3.0f);
    ins_61(60);
+60: //60
!E    ins_69(1, 6, 6, 1, 4.0f, 1.0f, 0.0f, 0.0f, 4);
!N    ins_69(1, 6, 12, 1, 4.0f, 1.0f, 0.0f, 0.0f, 4);
!H    ins_69(1, 6, 24, 1, 4.0f, 1.0f, 0.0f, 0.0f, 4);
!L    ins_69(1, 6, 24, 2, 4.0f, 1.0f, 0.0f, 0.1308997f, 4);
!*    ins_106(8);
+8: //68
!E    ins_69(0, 5, 8, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!N    ins_69(0, 5, 16, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!H    ins_69(0, 5, 32, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!L    ins_69(0, 5, 24, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!*    ins_106(8);
+8: //76
!E    ins_69(1, 6, 6, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!N    ins_69(1, 6, 12, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!H    ins_69(1, 6, 24, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!L    ins_69(1, 6, 24, 2, 2.0f, 1.0f, 0.0f, -0.1308997f, 4);
!*    ins_106(8);
+8: //84
!E    ins_69(0, 5, 8, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!N    ins_69(0, 5, 16, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!H    ins_69(0, 5, 32, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!L    ins_69(0, 5, 24, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!*    ins_106(8);
+8: //92
!E    ins_69(1, 6, 6, 1, 4.0f, 1.0f, 0.0f, 0.0f, 4);
!N    ins_69(1, 6, 12, 1, 4.0f, 1.0f, 0.0f, 0.0f, 4);
!H    ins_69(1, 6, 24, 2, 4.0f, 1.0f, 0.0f, 0.1308997f, 4);
!L    ins_69(1, 6, 32, 2, 4.0f, 1.0f, 0.0f, 0.1308997f, 4);
!*    ins_106(8);
+8: //100
!E    ins_69(0, 5, 8, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!N    ins_69(0, 5, 16, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!H    ins_69(0, 5, 32, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!L    ins_69(0, 5, 24, 1, 3.0f, 1.0f, 0.0f, 0.0f, 2);
!*    ins_106(8);
+8: //108
!E    ins_69(1, 6, 6, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!N    ins_69(1, 6, 12, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!H    ins_69(1, 6, 24, 2, 2.0f, 1.0f, 0.0f, -0.1308997f, 4);
!L    ins_69(1, 6, 32, 2, 2.0f, 1.0f, 0.0f, -0.1308997f, 4);
!*    ins_106(8);
+120: //228
    ins_6(-10001, 3);
    ins_39("Sub12", 0, 0.0f, -10001, 0);
    ins_39("Sub14", 0, 0.0f, -10001, 1);
    ins_35("Sub15", 0, 0.0f);
}

sub Sub14()
{
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(3.0f);
    ins_61(60);
+80: //80
!E    ins_67(2, 2, 2, 16, 5.0f, 1.0f, 0.0f, 0.06544985f, 8);
!N    ins_67(2, 2, 3, 16, 5.0f, 1.0f, 0.0f, 0.06544985f, 8);
!H    ins_67(2, 2, 5, 16, 5.0f, 1.0f, 0.0f, 0.06544985f, 8);
!L    ins_67(2, 2, 5, 16, 5.0f, 1.0f, 0.0f, 0.06544985f, 8);
!*    ins_106(7);
+30: //110
!N    ins_69(1, 6, 16, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!H    ins_69(1, 6, 24, 2, 2.5f, 1.0f, 0.0f, 0.0f, 4);
!L    ins_69(1, 6, 48, 3, 4.0f, 1.0f, 0.0f, 0.06544985f, 4);
+90: //200
!*    ins_6(-10001, 3);
    ins_39("Sub13", 0, 0.0f, -10001, 0);
    ins_39("Sub12", 0, 0.0f, -10001, 1);
    ins_35("Sub15", 0, 0.0f);
}

sub Sub15()
{
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(3.0f);
    ins_61(60);
    ins_4(-10009, 16);
    ins_5(-10005, 1.0f);
    ins_6(-10001, 2);
    ins_27(-10001, 0);
    ins_31(2, Sub15_456);
    ins_5(-10006, -0.2617994f);
Sub15_172:
+2: //2
!E    ins_67(1, 10, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.06544985f, 4);
!N    ins_67(1, 10, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.06544985f, 4);
!H    ins_67(1, 10, 2, 2, -10005.0f, 1.0f, -10006.0f, 0.06544985f, 4);
!L    ins_67(1, 10, 3, 3, -10005.0f, 1.0f, -10006.0f, 0.06544985f, 4);
!*    ins_106(8);
    ins_20(-10005, -10005.0f, 0.25f);
    ins_20(-10006, -10006.0f, 0.06544985f);
    ins_3(0, Sub15_172, -10009);
    ins_2(4, Sub15_740);
Sub15_456:
    ins_5(-10006, 0.2617994f);
Sub15_476:
+2: //4
!E    ins_67(1, 10, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.06544985f, 4);
!N    ins_67(1, 10, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.06544985f, 4);
!H    ins_67(1, 10, 2, 2, -10005.0f, 1.0f, -10006.0f, 0.06544985f, 4);
!L    ins_67(1, 10, 3, 3, -10005.0f, 1.0f, -10006.0f, 0.06544985f, 4);
!*    ins_106(8);
    ins_20(-10005, -10005.0f, 0.25f);
    ins_20(-10006, -10006.0f, -0.06544985f);
    ins_3(2, Sub15_476, -10009);
Sub15_740:
+120: //124
    ins_6(-10001, 3);
    ins_39("Sub13", 0, 0.0f, -10001, 0);
    ins_39("Sub14", 0, 0.0f, -10001, 1);
    ins_35("Sub12", 0, 0.0f);
}

sub Sub16()
{
    ins_105(0);
    ins_94();
    ins_107(3);
    ins_104(1);
    ins_108("Sub17");
    ins_100(258);
    ins_97(134);
    ins_111(7500);
    ins_112(0);
    ins_113(800);
    ins_114("Sub23");
    ins_115(1800);
    ins_116("Sub23");
    ins_117(1);
    ins_119(5);
    ins_126(0);
+200: //200
    ins_105(1);
    ins_35("Sub18", 0, 0.0f);
+3000: //3200
    ins_1(0);
}

sub Sub17()
{
    ins_47(0.0f);
    ins_104(0);
    ins_105(0);
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(0.6f);
    ins_61(60);
    ins_115(-1);
    ins_113(-1);
    ins_4(-10009, 6);
Sub17_152:
+2: //2
    ins_118(3, 2, -1, -1);
+2: //4
    ins_118(3, 2, -32640, -1);
+2: //6
    ins_118(3, 2, -128, -128);
+2: //8
    ins_118(3, 2, -32513, -128);
+2: //10
    ins_118(3, 2, -128, -1);
    ins_106(7);
    ins_3(0, Sub17_152, -10009);
    ins_106(18);
    ins_94();
    ins_111(0);
+3000: //3010
    ins_1(0);
}

sub Sub18()
{
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(3.0f);
    ins_61(60);
+12: //12
!E    ins_67(1, 10, 1, 8, 3.0f, 1.0f, 0.0f, 0.09817477f, 4);
!N    ins_67(1, 10, 2, 8, 3.0f, 1.0f, 0.0f, 0.09817477f, 4);
!H    ins_67(1, 10, 5, 8, 3.0f, 1.0f, 0.0f, 0.09817477f, 4);
!L    ins_67(1, 10, 7, 8, 3.0f, 1.0f, 0.0f, 0.09817477f, 4);
!*    ins_106(8);
+8: //20
    ins_86(0, 6, 0.0f, 0.0f, 0, 500.0f, 500.0f, 16.0f, 120, 60, 16, 120, 14, 0);
    ins_106(8);
+8: //28
    ins_86(0, 6, 0.0f, 0.0f, 0, 500.0f, 500.0f, 16.0f, 120, 60, 16, 120, 14, 0);
    ins_106(8);
+8: //36
    ins_86(0, 6, 0.0f, 0.0f, 0, 500.0f, 500.0f, 16.0f, 120, 60, 16, 120, 14, 0);
    ins_106(8);
+8: //44
    ins_86(0, 6, 0.0f, 0.0f, 0, 500.0f, 500.0f, 16.0f, 120, 60, 16, 120, 14, 0);
    ins_106(8);
+8: //52
    ins_86(0, 6, 0.0f, 0.0f, 0, 500.0f, 500.0f, 16.0f, 120, 60, 16, 120, 14, 0);
    ins_106(8);
+8: //60
    ins_86(0, 6, 0.0f, 0.0f, 0, 500.0f, 500.0f, 16.0f, 120, 60, 16, 120, 14, 0);
    ins_106(8);
+64: //124
    ins_106(16);
+8: //132
    ins_106(16);
+8: //140
    ins_106(16);
+8: //148
    ins_106(16);
+8: //156
    ins_106(16);
+8: //164
    ins_106(16);
+60: //224
    ins_6(-10001, 3);
    ins_39("Sub19", 0, 0.0f, -10001, 0);
    ins_39("Sub20", 0, 0.0f, -10001, 1);
    ins_35("Sub21", 0, 0.0f);
}

sub Sub19()
{
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(3.0f);
    ins_61(60);
+60: //60
    ins_97(136);
!E    ins_69(2, 10, 24, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!N    ins_69(2, 10, 36, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!H    ins_69(2, 10, 48, 2, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!L    ins_69(2, 10, 48, 2, 3.0f, 1.5f, 0.0f, 0.0f, 4);
!*    ins_106(8);
+30: //90
!E    ins_69(0, 10, 28, 1, 2.6f, 1.0f, 0.0f, 0.0f, 2);
!N    ins_69(0, 10, 28, 1, 2.6f, 1.0f, 0.0f, 0.0f, 2);
!H    ins_69(0, 10, 28, 1, 2.6f, 1.0f, 0.0f, 0.0f, 2);
!L    ins_69(0, 10, 32, 2, 3.6f, 1.5f, 0.0f, 0.0f, 2);
!*    ins_106(8);
+30: //120
!E    ins_69(2, 10, 24, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!N    ins_69(2, 10, 36, 1, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!H    ins_69(2, 10, 48, 2, 2.0f, 1.0f, 0.0f, 0.0f, 4);
!L    ins_69(2, 10, 48, 2, 3.0f, 1.5f, 0.0f, 0.0f, 4);
!*    ins_106(8);
+120: //240
    ins_6(-10001, 3);
    ins_39("Sub18", 0, 0.0f, -10001, 0);
    ins_39("Sub20", 0, 0.0f, -10001, 1);
    ins_35("Sub21", 0, 0.0f);
}

sub Sub20()
{
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(3.0f);
    ins_61(60);
+60: //60
!E    ins_67(2, 13, 4, 2, 3.0f, 1.0f, 0.0f, 0.5235988f, 8);
!N    ins_67(2, 13, 8, 2, 3.0f, 1.0f, 0.0f, 0.2617994f, 8);
!H    ins_67(2, 13, 12, 2, 3.0f, 1.0f, 0.0f, 0.19634955f, 8);
!L    ins_67(2, 13, 16, 2, 3.0f, 1.0f, 0.0f, 0.1308997f, 8);
!*    ins_97(136);
    ins_106(7);
+20: //80
!E    ins_67(2, 13, 5, 2, 3.0f, 1.0f, 0.0f, 0.5235988f, 8);
!N    ins_67(2, 13, 9, 2, 3.0f, 1.0f, 0.0f, 0.2617994f, 8);
!H    ins_67(2, 13, 15, 2, 3.0f, 1.0f, 0.0f, 0.19634955f, 8);
!L    ins_67(2, 13, 23, 2, 3.0f, 1.0f, 0.0f, 0.1308997f, 8);
!*    ins_106(7);
+20: //100
!E    ins_67(2, 13, 7, 2, 3.0f, 1.0f, 0.0f, 0.5235988f, 8);
!N    ins_67(2, 13, 10, 2, 3.0f, 1.0f, 0.0f, 0.2617994f, 8);
!H    ins_67(2, 13, 14, 2, 3.0f, 1.0f, 0.0f, 0.19634955f, 8);
!L    ins_67(2, 13, 20, 2, 3.0f, 1.0f, 0.0f, 0.1308997f, 8);
!*    ins_106(7);
+120: //220
    ins_6(-10001, 3);
    ins_39("Sub19", 0, 0.0f, -10001, 0);
    ins_39("Sub18", 0, 0.0f, -10001, 1);
    ins_35("Sub21", 0, 0.0f);
}

sub Sub21()
{
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(3.0f);
    ins_61(60);
    ins_4(-10009, 16);
    ins_5(-10005, 1.0f);
    ins_6(-10001, 2);
    ins_27(-10001, 0);
    ins_31(2, Sub21_456);
    ins_5(-10006, -0.7139983f);
Sub21_172:
+2: //2
!E    ins_67(1, 10, 2, 1, -10005.0f, 0.0f, -10006.0f, 0.14279966f, 4);
!N    ins_67(1, 10, 2, 1, -10005.0f, 0.0f, -10006.0f, 0.14279966f, 4);
!H    ins_67(1, 10, 3, 2, -10005.0f, 1.0f, -10006.0f, 0.14279966f, 4);
!L    ins_67(1, 10, 4, 3, -10005.0f, 1.0f, -10006.0f, 0.14279966f, 4);
!*    ins_106(8);
    ins_20(-10005, -10005.0f, 0.25f);
    ins_20(-10006, -10006.0f, 0.14279966f);
    ins_3(0, Sub21_172, -10009);
    ins_2(4, Sub21_740);
Sub21_456:
    ins_5(-10006, 0.7139983f);
Sub21_476:
+2: //4
!E    ins_67(1, 10, 2, 1, -10005.0f, 0.0f, -10006.0f, 0.14279966f, 4);
!N    ins_67(1, 10, 2, 1, -10005.0f, 0.0f, -10006.0f, 0.14279966f, 4);
!H    ins_67(1, 10, 3, 2, -10005.0f, 1.0f, -10006.0f, 0.14279966f, 4);
!L    ins_67(1, 10, 4, 3, -10005.0f, 1.0f, -10006.0f, 0.14279966f, 4);
!*    ins_106(8);
    ins_20(-10005, -10005.0f, 0.25f);
    ins_20(-10006, -10006.0f, -0.14279966f);
    ins_3(2, Sub21_476, -10009);
Sub21_740:
+120: //124
    ins_6(-10001, 3);
    ins_39("Sub19", 0, 0.0f, -10001, 0);
    ins_39("Sub20", 0, 0.0f, -10001, 1);
    ins_35("Sub18", 0, 0.0f);
}

sub Sub22()
{
    ins_93(2, 1, "夜符「ナイトバード」");
    ins_105(0);
    ins_115(1500);
    ins_112(0);
    ins_57(120, 192.0f, 96.0f, 0.0f);
+120: //120
    ins_105(1);
Sub22_142:
    ins_4(-10010, 2);
Sub22_162:
    ins_4(-10009, 16);
    ins_5(-10005, 1.0f);
    ins_5(-10006, -0.57119864f);
Sub22_222:
+2: //122
!EN    ins_67(1, 5, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.06544985f, 4);
!H    ins_67(1, 5, 1, 2, -10005.0f, 0.8f, -10006.0f, 0.06544985f, 4);
!L    ins_67(1, 5, 1, 3, -10005.0f, 0.8f, -10006.0f, 0.06544985f, 4);
!*    ins_20(-10005, -10005.0f, 0.2f);
!E    ins_20(-10006, -10006.0f, 0.19634955f);
!N    ins_20(-10006, -10006.0f, 0.14279966f);
!H    ins_20(-10006, -10006.0f, 0.14279966f);
!L    ins_20(-10006, -10006.0f, 0.14279966f);
!*    ins_3(120, Sub22_222, -10009);
    ins_4(-10009, 16);
    ins_5(-10005, 1.0f);
    ins_5(-10006, 0.57119864f);
Sub22_558:
+2: //124
!EN    ins_67(1, 7, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.06544985f, 4);
!H    ins_67(1, 7, 1, 2, -10005.0f, 0.8f, -10006.0f, 0.06544985f, 4);
!L    ins_67(1, 7, 1, 3, -10005.0f, 0.8f, -10006.0f, 0.06544985f, 4);
!*    ins_106(8);
    ins_20(-10005, -10005.0f, 0.2f);
!E    ins_20(-10006, -10006.0f, -0.19634955f);
!N    ins_20(-10006, -10006.0f, -0.14279966f);
!H    ins_20(-10006, -10006.0f, -0.14279966f);
!L    ins_20(-10006, -10006.0f, -0.14279966f);
!*    ins_3(122, Sub22_558, -10009);
    ins_4(-10009, 16);
    ins_5(-10005, 1.0f);
    ins_5(-10006, -0.7853982f);
Sub22_910:
+2: //126
!EN    ins_67(1, 6, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.06544985f, 4);
!H    ins_67(1, 6, 1, 2, -10005.0f, 0.8f, -10006.0f, 0.06544985f, 4);
!L    ins_67(1, 6, 1, 3, -10005.0f, 0.8f, -10006.0f, 0.06544985f, 4);
!*    ins_20(-10005, -10005.0f, 0.2f);
!E    ins_20(-10006, -10006.0f, 0.2617994f);
!N    ins_20(-10006, -10006.0f, 0.19634955f);
!H    ins_20(-10006, -10006.0f, 0.19634955f);
!L    ins_20(-10006, -10006.0f, 0.15707964f);
!*    ins_3(124, Sub22_910, -10009);
    ins_4(-10009, 16);
    ins_5(-10005, 1.0f);
    ins_5(-10006, 0.7853982f);
Sub22_1246:
+2: //128
!EN    ins_67(1, 8, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.06544985f, 4);
!H    ins_67(1, 8, 1, 2, -10005.0f, 0.8f, -10006.0f, 0.06544985f, 4);
!L    ins_67(1, 8, 1, 3, -10005.0f, 0.8f, -10006.0f, 0.06544985f, 4);
!*    ins_106(8);
    ins_20(-10005, -10005.0f, 0.2f);
!E    ins_20(-10006, -10006.0f, -0.2617994f);
!N    ins_20(-10006, -10006.0f, -0.19634955f);
!H    ins_20(-10006, -10006.0f, -0.19634955f);
!L    ins_20(-10006, -10006.0f, -0.15707964f);
!*    ins_3(126, Sub22_1246, -10009);
    ins_3(120, Sub22_162, -10010);
+100: //228
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(2.0f);
    ins_61(120);
    ins_2(120, Sub22_142);
}

sub Sub23()
{
    ins_93(2, 2, "闇符「ディマーケイション」");
    ins_105(0);
    ins_115(1500);
    ins_112(0);
    ins_57(120, 192.0f, 96.0f, 0.0f);
    ins_131(-1.0f, 1.0f, -3, 6, 0, 0);
+120: //120
    ins_105(1);
Sub23_178:
    ins_97(136);
    ins_82(40, 1, -1, -1, 1.5707964f, 1.5f, -1.0f, -1.0f);
!E    ins_69(2, 6, 12, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!N    ins_69(2, 6, 16, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!H    ins_69(2, 6, 28, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!L    ins_69(2, 6, 28, 2, 3.0f, 1.0f, 0.0f, 0.0f, 68);
!*    ins_82(40, 1, -1, -1, -1.5707964f, 1.5f, -1.0f, -1.0f);
!E    ins_69(2, 6, 12, 1, 3.0f, 0.0f, 0.2617994f, 0.0f, 68);
!N    ins_69(2, 6, 16, 1, 3.0f, 0.0f, 0.19634955f, 0.0f, 68);
!H    ins_69(2, 6, 28, 1, 3.0f, 0.0f, 0.15707964f, 0.0f, 68);
!L    ins_69(2, 6, 28, 2, 3.0f, 1.0f, 0.11219974f, 0.0f, 68);
!*    ins_106(9);
+60: //180
    ins_82(40, 1, -1, -1, -1.5707964f, 1.5f, -1.0f, -1.0f);
!E    ins_69(2, 10, 12, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!N    ins_69(2, 10, 16, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!H    ins_69(2, 10, 20, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!L    ins_69(2, 10, 28, 2, 3.0f, 1.0f, 0.0f, 0.0f, 68);
!*    ins_82(40, 1, -1, -1, 1.5707964f, 1.5f, -1.0f, -1.0f);
!E    ins_69(2, 10, 12, 1, 3.0f, 0.0f, 0.2617994f, 0.0f, 68);
!N    ins_69(2, 10, 16, 1, 3.0f, 0.0f, 0.19634955f, 0.0f, 68);
!H    ins_69(2, 10, 20, 1, 3.0f, 0.0f, 0.15707964f, 0.0f, 68);
!L    ins_69(2, 10, 28, 2, 3.0f, 1.0f, 0.11219974f, 0.0f, 68);
!*    ins_106(9);
+60: //240
    ins_82(40, 1, -1, -1, 1.5707964f, 1.5f, -1.0f, -1.0f);
!E    ins_69(2, 2, 12, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!N    ins_69(2, 2, 16, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!H    ins_69(2, 2, 28, 1, 3.0f, 0.0f, 0.0f, 0.0f, 68);
!L    ins_69(2, 2, 28, 2, 3.0f, 1.0f, 0.0f, 0.0f, 68);
!*    ins_82(40, 1, -1, -1, -1.5707964f, 1.5f, -1.0f, -1.0f);
!E    ins_69(2, 2, 12, 1, 3.0f, 0.0f, 0.2617994f, 0.0f, 68);
!N    ins_69(2, 2, 16, 1, 3.0f, 0.0f, 0.19634955f, 0.0f, 68);
!H    ins_69(2, 2, 28, 1, 3.0f, 0.0f, 0.15707964f, 0.0f, 68);
!L    ins_69(2, 2, 28, 2, 3.0f, 1.0f, 0.11219974f, 0.0f, 68);
!*    ins_106(9);
    ins_82(60, 1, -1, -1, 0.0f, -1.0f, -1.0f, -1.0f);
+60: //300
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(2.0f);
    ins_61(120);
!EN    ins_82(40, 1, -1, -1, 0.0f, 3.0f, -1.0f, -1.0f);
!HL    ins_82(40, 1, -1, -1, 0.0f, 4.0f, -1.0f, -1.0f);
!*    ins_4(-10010, 2);
Sub23_1766:
    ins_4(-10009, 12);
    ins_5(-10005, 1.0f);
    ins_5(-10006, -0.57119864f);
Sub23_1826:
+2: //302
    ins_67(1, 6, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.09817477f, 132);
    ins_20(-10005, -10005.0f, 0.2f);
    ins_20(-10006, -10006.0f, 0.14279966f);
    ins_3(300, Sub23_1826, -10009);
    ins_4(-10009, 12);
    ins_5(-10005, 1.0f);
    ins_5(-10006, 0.57119864f);
Sub23_2002:
+2: //304
    ins_67(1, 6, 1, 1, -10005.0f, 0.0f, -10006.0f, 0.09817477f, 132);
    ins_106(8);
    ins_20(-10005, -10005.0f, 0.2f);
    ins_20(-10006, -10006.0f, -0.14279966f);
    ins_3(302, Sub23_2002, -10009);
    ins_3(300, Sub23_1766, -10010);
    ins_50(-3.1415927f, 3.1415927f);
    ins_47(2.0f);
    ins_61(60);
+60: //364
    ins_2(120, Sub23_178);
}

timeline Timeline0()
{
+128: //128
    ins_0("Sub0", 60.0f, -32.0f, 0.0f, 8, -1, 300);
+16: //144
    ins_0("Sub0", 68.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //160
    ins_0("Sub0", 76.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //176
    ins_0("Sub0", 84.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //192
    ins_0("Sub0", 92.0f, -32.0f, 0.0f, 32, -1, 300);
+64: //256
    ins_2("Sub0", 324.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //272
    ins_2("Sub0", 316.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //288
    ins_2("Sub0", 308.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //304
    ins_2("Sub0", 300.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //320
    ins_2("Sub0", 292.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //336
    ins_2("Sub0", 284.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //352
    ins_2("Sub0", 276.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //368
    ins_2("Sub0", 268.0f, -32.0f, 0.0f, 32, -1, 300);
+64: //432
    ins_0("Sub1", 32.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 352.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //448
    ins_0("Sub1", 48.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 336.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //464
    ins_0("Sub1", 64.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 320.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //480
    ins_0("Sub1", 80.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 304.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //496
    ins_0("Sub1", 96.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 288.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //512
    ins_0("Sub1", 112.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 272.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //528
    ins_0("Sub1", 128.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 256.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //544
    ins_0("Sub1", 144.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 240.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //560
    ins_0("Sub1", 160.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 224.0f, -32.0f, 0.0f, 32, -1, 300);
+16: //576
    ins_0("Sub1", 176.0f, -32.0f, 0.0f, 32, -1, 300);
    ins_2("Sub1", 208.0f, -32.0f, 0.0f, 8, -1, 300);
+64: //640
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, 0, 700);
+60: //700
    ins_2("Sub3", 256.0f, -32.0f, 0.0f, 80, 0, 700);
+50: //750
    ins_0("Sub3", 128.0f, -32.0f, 0.0f, 80, 0, 700);
+50: //800
    ins_2("Sub2", 352.0f, -32.0f, 0.0f, 80, 0, 700);
+50: //850
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, 0, 700);
+40: //890
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, 0, 700);
+40: //930
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, 0, 700);
+30: //960
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, 0, 700);
+30: //990
    ins_0("Sub3", 32.0f, -32.0f, 0.0f, 80, 0, 700);
+30: //1020
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, 0, 700);
+20: //1040
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, 0, 700);
+20: //1060
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, 0, 700);
+20: //1080
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, 0, 700);
+10: //1090
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, 0, 700);
+10: //1100
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, 0, 700);
+10: //1110
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, 0, 700);
+110: //1220
    ins_6("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1230
    ins_4("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1240
    ins_6("Sub1", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1250
    ins_4("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1260
    ins_6("Sub1", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1270
    ins_4("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1280
    ins_6("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1290
    ins_4("Sub1", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1300
    ins_6("Sub1", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1310
    ins_4("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1320
    ins_4("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1330
    ins_6("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1340
    ins_4("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1350
    ins_6("Sub1", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1360
    ins_4("Sub1", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1370
    ins_6("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1380
    ins_4("Sub0", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1390
    ins_6("Sub1", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+10: //1400
    ins_4("Sub1", -999.0f, -32.0f, 0.0f, 32, -1, 300);
+200: //1600
    ins_2("Sub0", 320.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 352.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1616
    ins_2("Sub0", 312.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 344.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1632
    ins_2("Sub0", 304.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 336.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1648
    ins_2("Sub0", 296.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 328.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1664
    ins_2("Sub0", 288.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 320.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1680
    ins_2("Sub0", 280.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 312.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1696
    ins_0("Sub0", 64.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 96.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1712
    ins_0("Sub0", 72.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 104.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1728
    ins_0("Sub0", 80.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 112.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1744
    ins_0("Sub0", 88.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 120.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1760
    ins_0("Sub0", 96.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 128.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1776
    ins_0("Sub0", 104.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 136.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1792
    ins_0("Sub0", 112.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 144.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //1808
    ins_0("Sub0", 120.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 152.0f, -32.0f, 0.0f, 3, -1, 300);
+200: //2008
    ins_0("Sub8", 0.0f, 0.0f, 0.0f, 6000, -2, 100000);
+400: //2408
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2438
    ins_2("Sub3", 256.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2468
    ins_0("Sub3", 128.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2498
    ins_2("Sub2", 352.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2528
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2558
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2588
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2618
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2648
    ins_0("Sub3", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2678
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2708
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2738
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2768
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2798
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2828
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2858
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2888
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2918
    ins_2("Sub3", 256.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2948
    ins_0("Sub3", 128.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //2978
    ins_2("Sub2", 352.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3008
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3038
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3068
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3098
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3128
    ins_0("Sub3", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3158
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3188
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3218
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3248
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3278
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3308
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3338
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3368
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3398
    ins_2("Sub3", 256.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3428
    ins_0("Sub3", 128.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3458
    ins_2("Sub2", 352.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3488
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3518
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3548
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3578
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3608
    ins_0("Sub3", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3638
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3668
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3698
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3728
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3758
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3788
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3818
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3848
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3878
    ins_2("Sub3", 256.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3908
    ins_0("Sub3", 128.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3938
    ins_2("Sub2", 352.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3968
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //3998
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4028
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4058
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4088
    ins_0("Sub3", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4118
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4148
    ins_0("Sub3", 24.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4178
    ins_2("Sub3", 304.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4208
    ins_0("Sub2", 144.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4238
    ins_2("Sub3", 344.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4268
    ins_0("Sub2", 32.0f, -32.0f, 0.0f, 80, -1, 700);
+30: //4298
    ins_2("Sub2", 240.0f, -32.0f, 0.0f, 80, -1, 700);
+200: //4498
    ins_0("Sub0", 32.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 64.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4514
    ins_0("Sub0", 40.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 72.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4530
    ins_0("Sub0", 48.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 80.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4546
    ins_0("Sub0", 56.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 88.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4562
    ins_0("Sub0", 64.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 96.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4578
    ins_0("Sub0", 72.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 104.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4594
    ins_0("Sub0", 80.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 112.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4610
    ins_2("Sub0", 320.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 352.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4626
    ins_2("Sub0", 312.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 344.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4642
    ins_2("Sub0", 304.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 336.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4658
    ins_2("Sub0", 296.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 328.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4674
    ins_2("Sub0", 288.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 320.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4690
    ins_2("Sub0", 280.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 312.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4706
    ins_2("Sub0", 272.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 304.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4722
    ins_2("Sub0", 264.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 296.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4738
    ins_0("Sub0", 32.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 64.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4754
    ins_0("Sub0", 40.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 72.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4770
    ins_0("Sub0", 48.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 80.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4786
    ins_0("Sub0", 56.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 88.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4802
    ins_0("Sub0", 64.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 96.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4818
    ins_0("Sub0", 72.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 104.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4834
    ins_0("Sub0", 80.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 112.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4850
    ins_0("Sub0", 88.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_0("Sub0", 120.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4866
    ins_2("Sub0", 320.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 352.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4882
    ins_2("Sub0", 312.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 344.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4898
    ins_2("Sub0", 304.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 336.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4914
    ins_2("Sub0", 296.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 328.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4930
    ins_2("Sub0", 288.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 320.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4946
    ins_2("Sub0", 280.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 312.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4962
    ins_2("Sub0", 272.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 304.0f, -32.0f, 0.0f, 3, -1, 300);
+16: //4978
    ins_2("Sub0", 264.0f, -32.0f, 0.0f, 3, -1, 300);
    ins_2("Sub0", 296.0f, -32.0f, 0.0f, 3, -1, 300);
+300: //5278
    ins_8(0);
+1: //5279
    ins_9(0);
    ins_0("Sub10", 0.0f, 0.0f, 0.0f, 1, -2, 200000);
+1: //5280
    ins_9(0);
+1: //5281
    ins_10(0, 0, 0);
+1: //5282
    ins_12(0);
    ins_8(1);
+1: //5283
    ins_9(0);
}
